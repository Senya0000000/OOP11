class Автосалон:
    def __init__(self, название):
        self.__название = название

    def get_название(self):
        return self.__название

    def set_название(self, название):
        self.__название = название


class Автомобиль:
    def __init__(self, марка, макс_количество_пассажиров, стоимость, количество_на_складе, наличие):
        self.__марка = марка
        self.__макс_количество_пассажиров = макс_количество_пассажиров
        self.__стоимость = стоимость
        self.__количество_на_складе = количество_на_складе
        self.__наличие = наличие

    def get_марка(self):
        return self.__марка

    def set_марка(self, марка):
        self.__марка = марка

    def get_макс_количество_пассажиров(self):
        return self.__макс_количество_пассажиров

    def set_макс_количество_пассажиров(self, макс_количество_пассажиров):
        self.__макс_количество_пассажиров = макс_количество_пассажиров

    def get_стоимость(self):
        return self.__стоимость

    def set_стоимость(self, стоимость):
        self.__стоимость = стоимость

    def get_количество_на_складе(self):
        return self.__количество_на_складе

    def set_количество_на_складе(self, количество_на_складе):
        self.__количество_на_складе = количество_на_складе

    def get_наличие(self):
        return self.__наличие

    def set_наличие(self, наличие):
        self.__наличие = наличие


class ЗаявкаНаПокупку:
    def __init__(self, фио_покупателя, номер_телефона, автомобили):
        self.__фио_покупателя = фио_покупателя
        self.__номер_телефона = номер_телефона
        self.__автомобили = автомобили

    def get_фио_покупателя(self):
        return self.__фио_покупателя

    def set_фио_покупателя(self, фио_покупателя):
        self.__фио_покупателя = фио_покупателя

    def get_номер_телефона(self):
        return self.__номер_телефона

    def set_номер_телефона(self, номер_телефона):
        self.__номер_телефона = номер_телефона

    def get_автомобили(self):
        return self.__автомобили

    def set_автомобили(self, автомобили):
        self.__автомобили = автомобили

    def рассчитать_стоимость_заказа(self):
        try:
            if len(self.__автомобили) == 0:
                raise ValueError("В заявке отсутствуют автомобили")

            стоимость = 0
            for автомобиль in self.__автомобили:
                стоимость += автомобиль.get_стоимость()

            return стоимость
        except ValueError as error:
            print(f"Ошибка: {error}")


class ЗаявкаНаПриобретениеСоСтенда:
    def __init__(self, автомобили):
        self.__автомобили = автомобили

    def get_автомобили(self):
        return self.__автомобили

    def set_автомобили(self, автомобили):
        self.__автомобили = автомобили

    def рассчитать_стоимость_заказа(self):
        try:
            if len(self.__автомобили) == 0:
                raise ValueError("В заявке отсутствуют автомобили")

            стоимость = 0
            for автомобиль in self.__автомобили:
                стоимость += автомобиль.get_стоимость()

            return стоимость
        except ValueError as error:
            print(f"Ошибка: {error}")


class ЗаявкаНаОтложеннуюПоставку:
    def __init__(self, автомобили, процент_скидки):
        self.__автомобили = автомобили
        self.__процент_скидки = процент_скидки

    def get_автомобили(self):
        return self.__автомобили

    def set_автомобили(self, автомобили):
        self.__автомобили = автомобили

    def get_процент_скидки(self):
        return self.__процент_скидки

    def set_процент_скидки(self, процент_скидки):
        self.__процент_скидки = процент_скидки

    def рассчитать_стоимость_заказа(self):
        try:
            if len(self.__автомобили) == 0:
                raise ValueError("В заявке отсутствуют автомобили")

            стоимость = 0
            for автомобиль in self.__автомобили:
                стоимость += автомобиль.get_стоимость()

            скидка = стоимость * self.__процент_скидки / 100
            стоимость -= скидка

            return стоимость
        except ValueError as error:
            print(f"Ошибка: {error}")
# Пример использования
# Создание автосалона
автосалон = Автосалон("АвтоСити")

#  Автомобили
автомобиль1 = Автомобиль("BMW", 4, 5000000, 10, True)
автомобиль2 = Автомобиль("Audi", 5, 4000000, 15, True)
автомобиль3 = Автомобиль("Mercedes", 5, 6000000, 5, True)

# Создание заявки на покупку
заявка_на_покупку = ЗаявкаНаПокупку("Иванов Иван", "+7 999 123 45 67", [автомобиль1, автомобиль2])

# Рассчет стоимости заявки на покупку
стоимость_заявки_на_покупку = заявка_на_покупку.рассчитать_стоимость_заказа()
print(f"Стоимость заявки на покупку: {стоимость_заявки_на_покупку}")

# Создание заявки на приобретение со стенда
заявка_на_приобретение_со_стенда = ЗаявкаНаПриобретениеСоСтенда([автомобиль1, автомобиль3])

# Рассчет стоимости заявки на приобретение со стенда
стоимость_заявки_на_приобретение_со_стенда = заявка_на_приобретение_со_стенда.рассчитать_стоимость_заказа()
print(f"Стоимость заявки на приобретение со стенда: {стоимость_заявки_на_приобретение_со_стенда}")

# Создание заявки на отложенную поставку
заявка_на_отложенную_поставку = ЗаявкаНаОтложеннуюПоставку([автомобиль2, автомобиль3], 10)

# Рассчет стоимости заявки на отложенную поставку
стоимость_заявки_на_отложенную_поставку = заявка_на_отложенную_поставку.рассчитать_стоимость_заказа()
print(f"Стоимость заявки на отложенную поставку: {стоимость_заявки_на_отложенную_поставку}")